#!/usr/bin/env sh

sudo yabai --load-sa
yabai -m signal --add event=dock_did_restart action="sudo yabai --load-sa"

function record_window_id {
    json=$(yabai -m query --windows)
    window_id=$(echo $json | jq -er 'map(select(.focused == 1))[0].id')
    ruby $HOME/.config/yabai_focus.rb write $window_id
}

function focus_previous_window {
    previous_window_id=$(ruby $HOME/.config/yabai_focus.rb read $YABAI_WINDOW_ID)
    yabai -m window --focus $previous_window_id
}

yabai -m signal --add event=window_focused action="${functions[record_window_id]}"
yabai -m signal --add event=application_front_switched action="${functions[record_window_id]}"
yabai -m signal --add event=window_destroyed action="${functions[focus_previous_window]}"

# global settings
yabai -m config external_bar all:30:0
yabai -m config mouse_follows_focus          on
yabai -m config window_placement             second_child
yabai -m config window_topmost               on 
yabai -m config window_opacity               on 
yabai -m config window_opacity_duration      0.0
yabai -m config window_shadow                off 
yabai -m config insert_feedback_color        0xaad75f5f
yabai -m config active_window_opacity        1.0
yabai -m config normal_window_opacity        0.90
yabai -m config split_ratio                  0.50
yabai -m config auto_balance                 off 
yabai -m config mouse_modifier               F1
yabai -m config mouse_action1                move
yabai -m config mouse_action2                resize

# general space settings
yabai -m config layout                       bsp
yabai -m config top_padding               10
yabai -m config bottom_padding               10
yabai -m config left_padding                 10
yabai -m config right_padding                10 
yabai -m config window_gap                   10

#
# setup spaces
#
for _ in $(yabai -m query --spaces | jq '.[].index | select(. > 6)'); do
  yabai -m space --destroy 7
done

function setup_space {
  local idx="$1"
  local name="$2"
  local space=
  echo "setup space $idx : $name"

  space=$(yabai -m query --spaces --space "$idx")
  if [ -z "$space" ]; then
    yabai -m space --create
  fi

  yabai -m space "$idx" --label "$name"
}

setup_space 1 work
setup_space 2 notion
setup_space 3 slack
setup_space 4 calendar
setup_space 5 code
setup_space 6 other

# move some apps automatically to specific spaces
yabai -m rule --add app="^Vivaldi$" space=^1
yabai -m rule --add app="^Firefox$" space=^4
yabai -m rule --add app="^Zoom Workplace$" space=^4
yabai -m rule --add app="^Zoom$" space=^4
yabai -m rule --add app="^Zoom.us$" space=^4
yabai -m rule --add app="^Slack$" space=5
yabai -m rule --add app="^Notion$" space=2
yabai -m rule --add app="^Notion Calendar$" space=5
yabai -m rule --add app="^Messages$" space=6
yabai -m rule --add app="^Cursor$" space=3
yabai -m rule --add app="^Alacritty$" space=^3
# rules
## makes system preferences always floating
yabai -m rule --add app="^System Settings$" manage=off
yabai -m rule --add app="^Wally$" manage=off
borders active_color=0xffe1e3e4 inactive_color=0xff494d64 width=5.0 &borders active_color=0xffe1e3e4 inactive_color=0xff494d64 width=5.0 &

echo "yabai configuration loaded.."